[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio",
    "section": "",
    "text": "Take a look at some projects I have prepared.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInvesteringssparkonto - is it worth it?\n\n\n\ninteractive\n\n\ndashboard\n\n\nshiny\n\n\n\nAre you saving money by having an ISK?\n\n\n\nNils Kottmann\n\n\nSep 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Swedish Real Estate market\n\n\n\ncode\n\n\nanalysis\n\n\nvisualization\n\n\n\nA look at the housing market in the Swedish metropolitan areas.\n\n\n\nNils Kottmann\n\n\nJul 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Tuesday 2024w6 - LGBTQIA+ Movies\n\n\n\ntidy tuesday\n\n\ndata analysis\n\n\nR\n\n\nin progress\n\n\n\nA look at the LGBTQIA+ movies with data from The Movie Database.\n\n\n\nNils Kottmann\n\n\nJan 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/test1.html",
    "href": "projects/test1.html",
    "title": "Tidy Tuesday 2024w6 - LGBTQIA+ Movies",
    "section": "",
    "text": "Show the code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nShow the code\nlibrary(gt) # better tables\nlibrary(ggtext) # better titles and captions for graphs\nlibrary(pxweb) # grabbing data from SCB\n\n\npxweb 0.17.0: R tools for the PX-WEB API.\nhttps://github.com/ropengov/pxweb\n\n\nShow the code\nlibrary(cols4all) # better color choices with accessible palettes\n\n\nIn this\n\nGather data\n\n\nShow the code\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 26)\n\n\n---- Compiling #TidyTuesday Information for 2024-06-25 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"lgbtq_movies.csv\"\n\n\nShow the code\nlgbtq_movies &lt;- tuesdata$lgbtq_movies\n\n\n# Genre Ids manual\ngenres &lt;- tibble(\n  genre = c(\"Action\", \"Adventure\", \"Animation\", \"Comedy\", \"Crime\", \"Documentary\", \"Drama\",\n            \"Family\", \"Fantasy\", \"History\", \"Horror\", \"Music\", \"Mystery\", \"Romance\",\n            \"Science Fiction\", \"TV Movie\", \"Thriller\", \"War\", \"Western\"),\n  genre_id = c(28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 27, 10402, 9648, 10749, 878, 10770, 53, 10752, 37)\n)\n\n\n\n\n\n\n\n\nAbout the data\n\n\n\nThe Movie Database (TMDB) is a community built movie and TV database. Every piece of data has been added by our amazing community dating back to 2008. TMDb’s strong international focus and breadth of data is largely unmatched and something we’re incredibly proud of. Put simply, we live and breathe community and that’s precisely what makes us different.\nThe data is pulled from the TMDB API using LGBT+ keywords, which then returned keywords used in the database. Most keywords were used for the final query, but a few were discarded due to not being relevant (e.g. - ‘gender differences’).\nThe keyword array is as follows: [‘lgbt’, ‘gay’, ‘lesbian’,‘transgender’,‘bisexual’,‘intersex’,‘queer’,‘genderqueer’,‘non-binary’,‘gender’, ‘asexual’]\n\n\n\n\nWhat\nWhere do the most popular LGBTQ+ movies come from? Are more LGBTQ+ movies being released over time?\n\n\nShow the code\nlgbtq_movies %&gt;%\n  group_by(original_language) %&gt;% \n  summarize(n = n()) %&gt;% \n  arrange(desc(n)) %&gt;% \n  ggplot(aes(x = original_language, y = n)) +\n  geom_col()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Nils Kottmann",
    "section": "",
    "text": "I’m a Stockholm based data analyst currently working in the telecom sector."
  },
  {
    "objectID": "projects/tidytuesday_2024w6.html",
    "href": "projects/tidytuesday_2024w6.html",
    "title": "Tidy Tuesday 2024w6 - LGBTQIA+ Movies",
    "section": "",
    "text": "Show the code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nShow the code\nlibrary(gt) # better tables\nlibrary(ggtext) # better titles and captions for graphs\nlibrary(pxweb) # grabbing data from SCB\n\n\npxweb 0.17.0: R tools for the PX-WEB API.\nhttps://github.com/ropengov/pxweb\n\n\nShow the code\nlibrary(cols4all) # better color choices with accessible palettes\n\n\nIn this\n\nGather data\n\n\nShow the code\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 26)\n\n\n---- Compiling #TidyTuesday Information for 2024-06-25 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"lgbtq_movies.csv\"\n\n\nShow the code\nlgbtq_movies &lt;- tuesdata$lgbtq_movies\n\n\n# Genre Ids manual\ngenres &lt;- tibble(\n  genre = c(\"Action\", \"Adventure\", \"Animation\", \"Comedy\", \"Crime\", \"Documentary\", \"Drama\",\n            \"Family\", \"Fantasy\", \"History\", \"Horror\", \"Music\", \"Mystery\", \"Romance\",\n            \"Science Fiction\", \"TV Movie\", \"Thriller\", \"War\", \"Western\"),\n  genre_id = c(28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 27, 10402, 9648, 10749, 878, 10770, 53, 10752, 37)\n)\n\n\n\n\n\n\n\n\nAbout the data\n\n\n\nThe Movie Database (TMDB) is a community built movie and TV database. Every piece of data has been added by our amazing community dating back to 2008. TMDb’s strong international focus and breadth of data is largely unmatched and something we’re incredibly proud of. Put simply, we live and breathe community and that’s precisely what makes us different.\nThe data is pulled from the TMDB API using LGBT+ keywords, which then returned keywords used in the database. Most keywords were used for the final query, but a few were discarded due to not being relevant (e.g. - ‘gender differences’).\nThe keyword array is as follows: [‘lgbt’, ‘gay’, ‘lesbian’,‘transgender’,‘bisexual’,‘intersex’,‘queer’,‘genderqueer’,‘non-binary’,‘gender’, ‘asexual’]\n\n\n\n\nWhat\nWhere do the most popular LGBTQ+ movies come from? Are more LGBTQ+ movies being released over time?\n\n\nShow the code\nlgbtq_movies %&gt;%\n  group_by(original_language) %&gt;% \n  summarize(n = n()) %&gt;% \n  arrange(desc(n)) %&gt;% \n  ggplot(aes(x = original_language, y = n)) +\n  geom_col()"
  },
  {
    "objectID": "projects/isk_simulator.html",
    "href": "projects/isk_simulator.html",
    "title": "Investeringssparkonto - is it worth it?",
    "section": "",
    "text": "In this project, I created a shiny app (you can find the code run in the Hugging Face Space here) that compares the trade-offs between investing in an investeringssparkonto (ISK, a Swedish investment account that taxes wealth instead of capital gains) compared to a regular Depot account (that taxes 30% on capital gains).\nFor an ISK, the basic trade-off is between the capital gains and the taxes paid each year. The tax is determined by the government borrowing rate on November 30th in the year before plus one percentage point. Basically, the higher the gains are the better an ISK will be (since you don’t just get flatly taxed 30% on the gains) but the higher the government borrowing rate is the worse an ISK will be (since you will pay higher taxes on your savings each year).\n\nThe ISK simulator\nYou can calculate this for your own investment by setting up the parameters below. The table will show you if your past investment benefited from either being in an ISK or a regular depot account.\nThe graph on the left shows you for a given government borrowing rate, for which levels of annual return a ISK or depot is more beneficial. The graph on the right shows for a given level of returns up to which government borrowing rates a ISK will be beneficial over a depot. The shiny app might take a little while to load when the Hugging Face space is sleeping.\n\n\nShow the code\n# Hosted on a Hugging Face space\nknitr::include_app(\"https://nilskottmann-isk-simulator.hf.space\", height = \"800px\")\n\n\n\n\nCheck it out on Hugging Face if the space is sleeping.\n\n\nThe trade-off\nThe basic trade-off is between the expected government borrowing rate and the expected annual returns. Below, you can see a graph that illustrates this trade-off.\nThe color of the points at the intersections of average government borrowing rate and average annual return show which account type is more beneficial. The size of the point shows the difference in percentage points in the average annual net returns between the two account types.\nThe line shows the border between the two investment account types.\n\n\nShow the code\nlibrary(ggtext)\nlibrary(tidyverse)\n\nnames &lt;- c(\"ISK\",\"Depot\")\ncolors &lt;-  cols4all::c4a(palette = \"met.egypt\", n = length(names), type = \"cat\") \naccount_cols &lt;- setNames(colors, names)\n\n# a function that takes avg_return and interest_rate as parameters\ncalculate_returns &lt;- function(avg_return, interest_rate, start_amount, start_year, investment_horizon) {\n  annual_values &lt;- data.frame(\n    year = seq(start_year, start_year + investment_horizon, by = 1)\n    ) %&gt;%\n    mutate(tax_rate = case_when(\n        interest_rate &lt; 0.0025 ~ 0.0125 * 0.3,\n        TRUE ~ (interest_rate + 0.01) * 0.3)\n    )\n\n  # Update expected values each year\n  annual_values &lt;- annual_values %&gt;%\n    mutate(isk = start_amount * (1 + avg_return)^(year - start_year)) %&gt;%\n    mutate(depot = isk) %&gt;%\n    mutate(\n      isk_tax = case_when(\n        year == start_year ~ isk * tax_rate,\n        TRUE ~ (isk + lag(isk) / 2) * tax_rate\n      ),\n      depot_tax = case_when(\n        year == start_year + investment_horizon ~ (depot - start_amount) * (0.3)\n      )\n    )\n\n  isk_results &lt;- annual_values %&gt;%\n    summarize(\n      start_value = first(isk),\n      final_value = last(isk),\n      tax = sum(isk_tax, na.rm = TRUE)\n    ) %&gt;%\n    mutate(\n      net_return = final_value - start_value - tax,\n      net_return_rate = (final_value - start_value - tax) / start_value,\n      CAGR = ((final_value - tax) / start_value)^(1 / investment_horizon) - 1,\n      account = \"ISK\",\n      avg_return = !!avg_return,\n      interest_rate = !!interest_rate\n    )\n\n  depot_results &lt;- annual_values %&gt;%\n    summarize(\n      start_value = first(depot),\n      final_value = last(depot),\n      tax = sum(depot_tax, na.rm = TRUE)\n    ) %&gt;%\n    mutate(\n      net_return = final_value - start_value - tax,\n      net_return_rate = (final_value - start_value - tax) / start_value,\n      CAGR = ((final_value - tax) / start_value)^(1 / investment_horizon) - 1,\n      account = \"Depot\",\n      avg_return = !!avg_return,\n      interest_rate = !!interest_rate\n    )\n\n  result &lt;- bind_rows(isk_results, depot_results) %&gt;%\n    mutate(\n      winner = case_when(net_return == max(net_return) ~ \"Winner\", TRUE ~ \"Loser\"),\n      advantage = case_when(net_return == max(net_return) ~ CAGR - min(CAGR), TRUE ~ 0)\n    )\n  result\n}\n\nscenarios &lt;- expand.grid(\n  avg_return = seq(-0.05, 0.15, by = 0.01),\n  interest_rate = seq(0, 0.10, by = 0.01)\n)\n\nresults &lt;- purrr::pmap_df(\n  scenarios,\n  ~ calculate_returns(avg_return = ..1, interest_rate = ..2, 100, 1, 10)\n)\n  \n# The graph ####\nresults %&gt;%\n  arrange(avg_return, interest_rate) %&gt;%\n  filter(winner == \"Winner\") %&gt;%\n  group_by(avg_return) %&gt;% # group by x-axis\n  mutate(\n    border = case_when(account != lead(account) ~ \"X\", TRUE ~ NA),\n    yaxis = case_when(account != lead(account) ~ interest_rate + 0.005, TRUE ~ NA),\n    xaxis = case_when(account != lead(account) ~ avg_return, TRUE ~ NA)\n  ) %&gt;%\n  group_by(interest_rate) %&gt;%\n  mutate(\n    border = case_when(account != lead(account) & (interest_rate == 0 | interest_rate == 0.1) ~ \"X\", TRUE ~ border),\n    xaxis = case_when(account != lead(account) & (interest_rate == 0 | interest_rate == 0.1) ~ avg_return + 0.005, TRUE ~ xaxis),\n    yaxis = case_when(account != lead(account) & (interest_rate == 0 | interest_rate == 0.1) ~ interest_rate, TRUE ~ yaxis)\n  ) %&gt;%\n  ggplot(aes(\n    x = avg_return,\n    y = interest_rate,\n    color = account\n  )) +\n  geom_point(\n    aes(size = advantage),\n    alpha = 0.5,\n    stroke = NA\n  ) +\n  geom_line(aes(x = xaxis, y = yaxis, group = border), color = \"grey90\", linewidth = 1.5, show.legend = FALSE) + # add line for border between the two\n  scale_color_manual(values = account_cols) +\n  ggtitle(\"At which combinations of returns and borrowing rate are ISK or Depot accounts better?\",\n    subtitle = \"The size of the point shows how much more beneficial the account type is as the percentage point difference in the annual growth rate.\"\n  ) +\n  labs(\n    x = \"Average annual return\",\n    y = \"Average government borrowing rate\"\n  ) +\n  scale_x_continuous(labels = scales::label_percent()) +\n  scale_y_continuous(labels = scales::label_percent()) +\n  scale_size_continuous(labels = scales::label_percent(accuracy = 0.1)) + # Format 'advantage' legend as percentage\n  coord_fixed(ratio = 1) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8),\n    panel.grid = element_blank(),\n    plot.title = element_textbox_simple(hjust = 0, padding = margin(2, 2, 10, 0)),\n    plot.subtitle = element_textbox_simple(padding = margin(2, 2, 5.5, 0)),\n    plot.caption = element_text(hjust = 0, size = 10, face = \"italic\"),\n    panel.background = element_blank(),\n    plot.background = element_blank(),\n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n\n\n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\nHistoric perspective\nHow does the trade-off compare historically? What was the government borrowing rate?\n\n\n\n\n\n\n\n\nAbout the data\n\n\n\nThe government borrowing rate is taken from Riksgälden.\n\n\n\n\nShow the code\ncsv_url &lt;- \"https://www.riksgalden.se/globalassets/dokument_sve/statslaneranta/slr-historisk-statslaneranta-csv.csv\"\n\nrates_hist_tmp &lt;- readr::read_csv2(csv_url,\n  locale = locale(encoding = \"latin1\", decimal_mark = \",\"),\n  col_select = c(1, 2),\n  col_types = \"Dc\"\n)\n\nrates_hist &lt;- rates_hist_tmp %&gt;%\n  rename(\n    date = 1,\n    rates = 2\n  ) %&gt;%\n  mutate(\n    year = year(date),\n    date = as_date(date),\n    rates = as.numeric(str_replace(rates, \"\\\\,\", \".\")) / 100\n  )\n\nrates &lt;- rates_hist %&gt;%\n  group_by(year) %&gt;%\n  filter(month(date) == 11 & day(date) &lt;= 30) %&gt;%\n  slice_head() %&gt;%\n  ungroup() %&gt;%\n  mutate(tax_year = year + 1) %&gt;%\n  select(tax_year, rates)\n\nmax_year &lt;- max(rates$tax_year)\n\nrates %&gt;% \n  ggplot(\n    aes(x = tax_year, y = rates, label = paste0(round(rates*100,1),\"%\"))\n  ) +\n  geom_line(color = \"grey50\", linewidth = 1) +\n    ggtitle(\"What was the government borrowing rate for each tax year?\",\n    subtitle = paste0(min(rates$tax_year),\" - \",max(rates$tax_year))\n  ) +\n  labs(\n    x = \"Tax year\",\n    y = \"Government borrowing rate\"\n  ) +\n  scale_y_continuous(labels = scales::label_percent()) +\n  geom_text(data = rates %&gt;% filter(tax_year == max_year), nudge_y = 0.01) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8),\n    panel.grid = element_blank(),\n    plot.title = element_textbox_simple(hjust = 0, padding = margin(2, 2, 10, 0)),\n    plot.subtitle = element_textbox_simple(padding = margin(2, 2, 5.5, 0)),\n    plot.caption = element_text(hjust = 0, size = 10, face = \"italic\"),\n    panel.background = element_blank(),\n    plot.background = element_blank(),\n    legend.title = element_blank(),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n\n\n\n\n\nFor the tax year of 2024 the government borrowing rate is 2,6%, meaning you will need an annual return of at least 5% to break even with a ISK compared to a depot.\n\n\nHow\nThis Shiny app is written in R and hosted on a Hugging Face Space. For years, prior to 2025 it uses the actual government borrowing rate but for later years it uses the expected future government borrowing rate that you can set yourself.\nYou can then simulate your investment over a chosen time horizon given the average expected growth and average expected future government borrowing rate to understand your cost implications.\nThe calculations are done in a few steps:\n\nWe take the starting value as the average value of the account for the first year (technically, you should average out the value of your ISK account at the end of each quarter to get the average value for the year - but we simplified it in this example). Then we take the average of year start and year end values to arrive at the average account value for the year.\nThis account value is then taxed each year. For years where we know the government borrowing rate - 2024 or earlier - we use the actual government borrowing rate and for later years we use the expected future government borrowing rate that you can select yourself. The government borrowing rate is used to calculate an expected return on the ISK account by taking the government borrowing rate, adding 1 percentage point, multiplying by the average value of the account (to get expected capital gains) and multiplying that by 30% to arrive at the taxes to be paid.\n\n\n\nThe investment grows each year by the expected growth rate (choose yourself) and the ISK account pays taxes each year while the depot account only pays taxes in the final year.\n\n4.In the table, you see the final value of the investment, as well as taxes paid and net returns. Any other costs of the investments are not taken into account."
  },
  {
    "objectID": "projects/swedish_real_estate.html",
    "href": "projects/swedish_real_estate.html",
    "title": "The Swedish Real Estate market",
    "section": "",
    "text": "Show the code\nlibrary(tidyverse)\nlibrary(gt) # better tables\nlibrary(ggtext) # better titles and captions for graphs\nlibrary(pxweb) # grabbing data from SCB\nlibrary(cols4all) # better color choices with accessible palettes\n\n\nIn this post, I will take a look at the swedish real estate market.\nTrying to answer the question how worried should one be about the housing market?\n\nGather data\n\n\nShow the code\n# Sold tenant-owned flats by region, observations and year\n# d &lt;- pxweb_interactive(\"https://api.scb.se/OV0104/v1/doris/en/ssd/START/BO/BO0501/BO0501C/FastprisBRFRegionAr\")\n# PXWEB query \n\npxweb_query_list &lt;- \n  list(\n    \"Region\"=c(\"00\",\"0010\",\"0020\",\"0030\",\"0060\",\"01\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"12\",\"13\",\"14\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\"),\n    \"ContentsCode\"=c(\"BO0501R6\",\"BO0501R7\",\"BO0501R8\"),\n    \"Tid\"=c(\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\",\"2023\"))\n\npx_data &lt;- \n  pxweb_get(\n    url = \"https://api.scb.se/OV0104/v1/doris/en/ssd/START/BO/BO0501/BO0501C/FastprisBRFRegionAr\",\n    query = pxweb_query_list)\n\nsales_region_tmp &lt;- as.data.frame(px_data, column.name.type = \"text\", variable.value.type = \"text\")\n\n# Price index (city & country) \n\n# Rent index (city)\n\n# Income Index (city)\n\n# Mortgage, Construction, GDP, Inflation (Country)\n\n\n\n\nShow the code\nsales_region &lt;- sales_region_tmp %&gt;% \n  rename(\n    n_sales = 'Number of',\n    mean_price_sek_k = 'Average price in SEK thousands',\n    median_price_sek_k = 'Median price in SEK thousands'\n    ) %&gt;% \n  mutate(year = as.numeric(year)) %&gt;% \n  group_by(region) %&gt;% \n  mutate(\n    sales_index = n_sales / n_sales[year == 2010] * 100,\n    mean_price_index = mean_price_sek_k / mean_price_sek_k[year == 2010] * 100,\n    median_price_index = median_price_sek_k / median_price_sek_k[year == 2010] * 100\n    ) %&gt;% \n  ungroup()\n\n\n\n\nShow the code\ndefault_theme &lt;-  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8),\n    legend.position = \"top\",\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    legend.title = element_blank(),\n    plot.title = element_textbox_simple(padding = margin(2, 2, 10, 0)),\n    plot.subtitle = element_textbox_simple(padding = margin(2, 2, 5.5, 0)),\n    plot.caption = element_text(hjust = 0, size = 10, face = \"italic\"),\n    panel.background = element_blank(),\n    plot.background = element_blank(),\n    plot.title.position = \"plot\",\n    plot.caption.position =  \"plot\"\n  )\n\n# Region colors \n\nnames &lt;- sales_region %&gt;% \n  filter(str_detect(region,\"Greater\")) %&gt;% \n  distinct(region) %&gt;% \n  unlist()\ncolors &lt;-  cols4all::c4a(palette = \"tol.medium\", n = length(names), type = \"cat\") \nregion_cols &lt;- setNames(colors, names)\n\nrm(names, colors)\n\n\n\n\n\n\n\n\nAbout the data\n\n\n\nThe data here comes from SCB\n\n\n\n\nAnalysis\nHow active is the housing market?\n\nTotal numbersIndex\n\n\n\n\nShow the code\nsales_region %&gt;% \n  filter(str_detect(region,\"Greater\")) %&gt;% \n  ggplot(aes(\n    x = year,\n    y = n_sales,\n    group = region,\n    color = region\n    ))+\n  geom_line(linewidth = 1)+\n  ggtitle(\"Number of sales \") +\n  scale_color_manual(values = region_cols) +\n  default_theme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\nShow the code\nsales_region %&gt;% \n  filter(str_detect(region,\"Greater\")) %&gt;% \n  ggplot(aes(\n    x = year,\n    y = sales_index,\n    group = region,\n    color = region\n    ))+\n  geom_point(alpha = 0.5) +\n  geom_line(linewidth = 1)+\n  ggtitle(\"Indexed number of sales of tennant-owned flats\",\n          subtitle = \"Sales in 2010 = 100.\") +\n  labs(x = \"Year\", y = \"Sales index\")+\n  scale_color_manual(values = region_cols) +\n  default_theme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\nActivity in the housing market peaked in all three metropolitan areas in 2021 with a sales index of relative to 2010 at 136 in Stockholm, which has since fallen to 98 in 2023.\n\n\nprice statistics\n\nMedian pricesIndex\n\n\n\n\nShow the code\nsales_region %&gt;% \n  filter(str_detect(region,\"Greater\")) %&gt;% \n  ggplot(aes(\n    x = year,\n    y = median_price_sek_k,\n    group = region,\n    color = region\n    ))+\n  geom_line(linewidth = 1)+\n  ggtitle(\"Median price of tenant-owned flats sold\") +\n  labs(x = \"Year\", y = \"Median price (in 1000 SEK)\")+\n  scale_color_manual(values = region_cols) +\n  default_theme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\nShow the code\nsales_region %&gt;% \n  filter(str_detect(region,\"Greater\")) %&gt;% \n  ggplot(aes(\n    x = year,\n    y = median_price_index,\n    group = region,\n    color = region\n    ))+\n  geom_point(alpha = 0.5) +\n  geom_line(linewidth = 1)+\n  ggtitle(\"Indexed number of sales of tennant-owned flats\",\n          subtitle = \"Sales in 2010 = 100.\") +\n  labs(x = \"Year\", y = \"Median price index\")+\n  scale_color_manual(values = region_cols) +\n  default_theme\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n  \n\n\n  \n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n\n\n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n  \n  \n\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n  \n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\nMedian prices peaked in 2021 in Gothenburg and in 2022 in Malmö and Stockholm with prices roughly doubling since 2010.\nThe median price in Stockholm in 2023 was 3.3 million SEK.\n\n\nRecreating UBS bubble index\n\n\nShow the code\nsales_region %&gt;% filter(str_detect(region,\"Greater Stockh\"), year == 2023) %&gt;% select(median_price_sek_k)/1000 %&gt;% round(digits = 1)\n\n\n  median_price_sek_k\n1                3.3\n\n\nShow the code\nsales_region %&gt;% filter(str_detect(region,\"Greater Stockh\")) %&gt;% group_by(region) %&gt;%  mutate(max_prcie = max(median_price_index)) %&gt;% filter(max_prcie == median_price_index)\n\n\n# A tibble: 1 × 9\n# Groups:   region [1]\n  region            year n_sales mean_price_sek_k median_price_sek_k sales_index\n  &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;            &lt;dbl&gt;              &lt;dbl&gt;       &lt;dbl&gt;\n1 Greater Stockho…  2022   40113             4121               3350        113.\n# ℹ 3 more variables: mean_price_index &lt;dbl&gt;, median_price_index &lt;dbl&gt;,\n#   max_prcie &lt;dbl&gt;"
  }
]